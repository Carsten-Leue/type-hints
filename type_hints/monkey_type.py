from typing import Any, Dict, List, Optional, Union


class Containers:
    def __init__(self) -> None: ...
    def _get_passthrough_qg_from_container(self, container_name: str) -> List[Any]: ...
    def _process_steps(
        self,
        steplist: Union[List[Union[RemoveContainer, RemoveCryptoDev, RemoveContainerDir, RemoveContainerDatapool, RemoveContainerQuotagroupStatus, RemovePassthroughQuotagroups]], List[Union[CreateContainerDir, AddContainerToQuotagroupStatus, CreateContainerDatapool, CreateCryptoDev, PreProcessConfiguration, CreateContainer, ConnectContainerToNetwork, StartContainer]]]
    ) -> None: ...
    def exec_additional_func(self) -> None: ...
    def get_container(self, container_id: str, base_url: None = ...) -> Container: ...
    def get_container_config(self, container_name: str): ...
    def get_container_repository_id(self, container: Container) -> str: ...
    def get_containers(
        self,
        show_all: bool = ...,
        filters: None = ...,
        base_url: None = ...
    ) -> Dict[str, Dict[str, Union[str, List[str]]]]: ...
    def is_container_quotagroup_locked(self, container_id: Optional[str] = ...): ...
    def remove_container(self, container_id: str) -> None: ...
    def validate_container_config(self, config: Dict[str, Union[str, Dict[str, str], List[Dict[str, str]]]]) -> None: ...